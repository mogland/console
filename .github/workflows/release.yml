on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  build:
    name: Upload Release Asset
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Create Release
        id: create_release
        run: |
          npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache pnpm modules
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v2.4.1
        with:
          version: latest
          run_install: true

      - name: Build project
        run: |
          pnpm run build:mog
          zip -r dist.zip dist/
      - name: Get CSS file name
        id: get_css_file_name
        run: |
          echo "::set-output name=css_file_name::$(ls dist/assets/ | grep css)"
      - name: Get JS file name (index-xxx.js)
        id: get_js_file_name
        run: |
          echo "::set-output name=js_file_name::$(ls dist/assets | grep js)"

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - index.html
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/index.html
          asset_name: index.html
          asset_content_type: text/html

      - name: Upload Release Asset - index.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/assets/${{ steps.get_css_file_name.outputs.css_file_name }}
          asset_name: ${{ steps.get_css_file_name.outputs.css_file_name }}
          asset_content_type: text/css

      - name: Upload Release Asset - index.js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/assets/${{ steps.get_js_file_name.outputs.js_file_name }}
          asset_name: ${{ steps.get_js_file_name.outputs.js_file_name }}
          asset_content_type: application/javascript
      - name: Upload Release Asset - background.avif
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/background.avif
          asset_name: background.avif
          asset_content_type: image/avif